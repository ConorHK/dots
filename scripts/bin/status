#!/bin/sh

sep='<span foreground="#878787">⏹</span>'

bspwm() {
	case "$1" in
	-s | --simple)
    bspc query -D -d focused --names
    ;;
	-f | --full)
    active_desktops=$(bspc query -D -d .occupied --names | tr "\n" " ")
    echo "Active desktops: $active_desktops"
		;;
	esac
}

calendar() {
	time=$(date +"%R")
	date=$(date +"%A, %B %d")

	case "$1" in
	-s | --time)
		echo "$time"
		;;
	-f | --date)
		env printf "$date"
		;;
	esac
}

greeting() {
  time=$(date +%H)
  if [ "$time" -lt 12 ]; then
    echo morning
  elif [ "$time" -lt 18 ]; then
    echo afternoon
  else
    echo evening
  fi
}

soundinfo() {
  volume=$(audio -s volume)
  mute_status=$(audio -s muted)
  spotify_metadata=$(dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:org.mpris.MediaPlayer2.Player string:Metadata 2> /dev/null)

  if [ "$mute_status" = "No active sink" ]; then
    echo "No active sink"
    return
  fi

  if [ -n "$spotify_metadata" ]; then
    spotify=true
    artist=$(echo "$spotify_metadata" | sed -n '/artist/{n;n;p}' | cut -d '"' -f 2)
    song=$(echo "$spotify_metadata" | sed -n '/title/{n;p}' | cut -d '"' -f 2)
  fi
  spotify_status=$([ "$spotify" = "true" ] && echo "$artist - $song" || echo "not playing")

	case "$1" in
	-s | --simple)
    [ "$mute_status" = "playing" ] && echo "$volume%%" || echo "$mute_status"
		;;
  -p | --spotify)
    echo "$spotify_status"
    ;;
	-f | --full)
    output=$(audio -s output)
    printf "%s\n<span foreground='#878787'>-----------------</span>\nVolume: %s%%\nMute status: %s\nSpotify: %s\n" "$output" "$volume" "$mute_status" "$spotify_status"
		;;
	esac
}

brightness() {
  current_brightness=$(cat /sys/class/backlight/intel_backlight/brightness)
  max_brightness=$(cat /sys/class/backlight/intel_backlight/max_brightness)
  printf "%d" $((current_brightness * 100 / max_brightness))
}

battery() {
  if  ! command -v acpi > /dev/null 2>&1 ; then
    echo
  fi
	case "$1" in
	-s | --simple)
		if [ "$(acpi | wc -l)" = "1" ]; then
			if [ "$(acpi | awk '{print $3}')" = "Charging," ]; then
				echo "$(acpi | awk '{print $4}' | cut -d',' -f1)%"
			elif [ "$(acpi | awk '{print $3}')" = "Full," ]; then
				echo "Full"
			else
				echo "$(acpi | awk '{print $4}' | cut -d',' -f1)%"
			fi
		else
			if [ "$(acpi | awk 'NR=2 {print $3}')" = "Charging," ]; then
				acpi | awk 'NR=2 {print $4}' | cut -d',' -f1
			elif [ "$(acpi | awk 'NR=2 {print $3}')" = "Full," ]; then
				echo "Full"
			else
				acpi | awk 'NR=2 {print $4}' | cut -d',' -f1
			fi
		fi
		;;
	-f | --full)
		if [ "$(acpi | wc -l)" = "1" ]; then
			state=$(acpi | awk '{print $3}')
      percent=$(acpi | awk '{print $4}' | cut -d',' -f1)
			if [ "$state" = "Charging," ]; then
				time=$(acpi | awk NR=1 | awk '{print $5, $6, $7}')
				echo "$percent, $time"
			elif [ "$state" = "Full," ]; then
				echo "Full"
			else
				time=$(acpi | awk NR=1 | awk '{print $5, $6}')
				echo "$percent, $time"
			fi
		else
			state=$(acpi | awk 'NR=2 {print $3}')
			if [ "$state" = "Charging," ]; then
				percent=$(acpi | awk 'NR=2 {print $4}' | cut -d',' -f1)
				time=$(acpi | awk 'NR=2 {print $5, $6, $7}')
				echo "$percent%, $time"
			elif [ "$state" = "Full," ]; then
				echo " $sep Full"
			else
				percent=$(acpi | awk 'NR=2 {print $4}' | cut -d',' -f1)
				time=$(acpi | awk 'NR=2 {print $5, $6}')
				echo "$percent%, $time"
			fi
		fi
		;;
	esac
}

case "$1" in
--bspwm)
	wm=$(bspwm --full)
	notify-send "BSPWM" "$wm"
	;;
--calendar)
	cal=$(calendar --date)
	notify-send "Date" "$cal"
	;;
--audio)
	sound=$(soundinfo --full)
	notify-send "Audio" "$sound"
	;;
--brightness)
	light=$(brightness --full)
	notify-send "Backlight" "$light"
	;;
--battery)
	power=$(battery --full)
	notify-send "Battery" "$power"
	;;
--internet)
  notify-send "Internet" "Status: $(is-connected)"
	;;
*)
	wm=$(env printf "%-60s %s\n" "you_are_on_workspace<span_foreground='#878787'>_" "_</span><span_foreground='#57875f'>$(bspwm --simple)</span>")
	cal=$(env printf "%-60s %s\n" "it_is_currently<span_foreground='#878787'>_" "_</span><span_foreground='#af5f5f'>$(calendar --time)</span>")
	sound=$(env printf "%-60s %s\n" "volume_is_<span_foreground='#878787'>_" "_</span><span_foreground='#87afaf'>$(soundinfo --simple)</span>")
	interwebs=$(env printf "%-60s %s\n" "internet_is<span_foreground='#878787'>_" "_</span><span_foreground='#af8787'>$(is-connected)</span>")
  info="$wm\n$cal\n$interwebs"

  light_output=$(brightness --simple)
  if [ -n "$light_output" ]; then
    light=$(env printf "%-60s %s\n" "brightness_at<span_foreground='#878787'>_" "_</span><span_foreground='#87afaf'>$(brightness --simple)</span>")
    info="$info\n$light"
  fi

  power_output=$(battery --simple)
  if [ -n "$power_output" ]; then
    power=$(env printf "%-60s %s\n" "battery_at<span_foreground='#878787'>_" "_</span><span_foreground='#af875f'>$(battery --simple)</span>")
    info="$info\n$power"
  fi
	fanc=$(env printf "$info\n" | tr " " "." | tr "_" " ")
  greeting=$(greeting)
	notify-send -t 10000 "$greeting, $USER" "$fanc"
  ;;

esac
